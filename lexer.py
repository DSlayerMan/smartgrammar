import ply.lex as lex

# List of token names.   This is always required
tokens = (
  'CREATURE', #CREATURE
  'SCRIPT', # SCRIPT
  'COLON', # :
  'ENTRY', # entry
  'GUID', # guid
  'EQUAL',
  'NUMBER',
  'ID', # id
  'LINK', #link
  'EVENT_PHASE_MASK', #eventPhaseMask
  'EVENT_FLAGS', #eventFlags
  'EVENT_CHANCE', # eventChance
  'DO', # DO
  'AT', # AT
  'SPELL_ID', # spellId
  'CAST_FLAGS', # castFlags
  'CREATURE_ENTRY', # creatureEntry
  'MAX_DIST', # maxDist
  'SMART_EVENT', # SMART_EVENT_something
  'SMART_ACTION', # SMART_ACTION_something
  'PARAM_1',
  'PARAM_2',
  'PARAM_3',
  'PARAM_4',
  'SMART_EVENT_UPDATE_IC',
  'SMART_EVENT_UPDATE_OOC',
  'SMART_EVENT_HEALT_PCT',
  'SMART_EVENT_MANA_PCT',
  'SMART_EVENT_AGGRO',
  'SMART_EVENT_KILL',
  'SMART_EVENT_DEATH',
  'SMART_EVENT_EVADE',
  'SMART_EVENT_SPELLHIT',
  'SMART_EVENT_RANGE',
  'SMART_EVENT_OOC_LOS',
  'SMART_EVENT_RESPAWN',
  'SMART_EVENT_TARGET_HEALTH_PCT',
  'SMART_EVENT_VICTIM_CASTING',
  'SMART_EVENT_FRIENDLY_HEALTH',
  'SMART_EVENT_FRIENDLY_IS_CC',
  'SMART_EVENT_FRIENDLY_MISSING_BUFF',
  'SMART_EVENT_SUMMONED_UNIT',
  'SMART_EVENT_TARGET_MANA_PCT',
  'SMART_EVENT_ACCEPTED_QUEST',
  'SMART_EVENT_REWARD_QUEST',
  'SMART_EVENT_REACHED_HOME',
  'SMART_EVENT_RECEIVE_EMOTE',
  'SMART_EVENT_HAS_AURA',
  'SMART_EVENT_TARGET_BUFFED',
  'SMART_EVENT_RESET',
  'SMART_EVENT_IC_LOS',
  'SMART_EVENT_PASSENGER_BOARDED',
  'SMART_EVENT_PASSENGER_REMOVED',
  'SMART_EVENT_CHARMED',
  'SMART_EVENT_CHARMED_TARGET',
  'SMART_EVENT_SPELLHIT_TARGET',
  'SMART_EVENT_DAMAGED',
  'SMART_EVENT_DAMAGED_TARGET',
  'SMART_EVENT_MOVEMENTINFORM',
  'SMART_EVENT_SUMMON_DESPAWNED',
  'SMART_EVENT_CORPSE_REMOVED',
  'SMART_EVENT_AI_INIT',
  'SMART_EVENT_DATA_SET',
  'SMART_EVENT_WAYPOINT_START',
  'SMART_EVENT_WAYPOINT_REACHED',
  'SMART_EVENT_TRANSPORT_ADDPLAYER',
  'SMART_EVENT_TRANSPORT_ADDCREATURE',
  'SMART_EVENT_TRANSPORT_REMOVE_PLAYER',
  'SMART_EVENT_TRANSPORT_RELOCATE',
  'SMART_EVENT_INSTANCE_PLAYER_ENTER',
  'SMART_EVENT_AREATRIGGER_ONTRIGGER',
  'SMART_EVENT_QUEST_ACCEPTED',
  'SMART_EVENT_QUEST_OBJ_COPLETETION',
  'SMART_EVENT_QUEST_COMPLETION',
  'SMART_EVENT_QUEST_REWARDED',
  'SMART_EVENT_QUEST_FAIL',
  'SMART_EVENT_TEXT_OVER',
  'SMART_EVENT_RECEIVE_HEAL',
  'SMART_EVENT_JUST_SUMMONED',
  'SMART_EVENT_WAYPOINT_PAUSED',
  'SMART_EVENT_WAYPOINT_RESUMED',
  'SMART_EVENT_WAYPOINT_STOPPED',
  'SMART_EVENT_WAYPOINT_ENDED',
  'SMART_EVENT_TIMED_EVENT_TRIGGERED',
  'SMART_EVENT_UPDATE',
  'SMART_EVENT_LINK',
  'SMART_EVENT_GOSSIP_SELECT',
  'SMART_EVENT_JUST_CREATED',
  'SMART_EVENT_GOSSIP_HELLO',
  'SMART_EVENT_FOLLOW_COMPLETED',
  'SMART_EVENT_DUMMY_EFFECT',
  'SMART_EVENT_IS_BEHIND_TARGET',
  'SMART_EVENT_GAME_EVENT_START',
  'SMART_EVENT_GAME_EVENT_END',
  'SMART_EVENT_GO_STATE_CHANGED',
  'SMART_EVENT_GO_EVENT_INFORM',
  'SMART_EVENT_ACTION_DONE',
  'SMART_EVENT_ON_SPELLCLICK',
  'SMART_EVENT_FRIENDLY_HEALTH_PCT',
  'SMART_EVENT_DISTANCE_CREATURE',
  'SMART_EVENT_DISTANCE_GAMEOBJECT',
  'SMART_EVENT_COUNTER_SET',

  'SMART_ACTION_NONE',
  'SMART_ACTION_TALK',
  'SMART_ACTION_SET_FACTION',
  'SMART_ACTION_MORPH_TO_ENTRY_OR_MODEL',
  'SMART_ACTION_SOUND',
  'SMART_ACTION_PLAY_EMOTE',
  'SMART_ACTION_FAIL_QUEST',
  'SMART_ACTION_ADD_QUEST',
  'SMART_ACTION_SET_REACT_STATE',
  'SMART_ACTION_ACTIVATE_GOBJECT',
  'SMART_ACTION_RANDOM_EMOTE',
  'SMART_ACTION_CAST',
  'SMART_ACTION_SUMMON_CREATURE',
  'SMART_ACTION_THREAT_SINGLE_PCT',
  'SMART_ACTION_THREAT_ALL_PCT',
  'SMART_ACTION_CALL_AREAEXPLOREDOREVENTHAPPENS',
  'SMART_ACTION_SET_INGAME_PHASE_GROUP',
  'SMART_ACTION_SET_EMOTE_STATE',
  'SMART_ACTION_SET_UNIT_FLAG',
  'SMART_ACTION_REMOVE_UNIT_FLAG',
  'SMART_ACTION_AUTO_ATTACK',
  'SMART_ACTION_ALLOW_COMBAT_MOVEMENT',
  'SMART_ACTION_SET_EVENT_PHASE',
  'SMART_ACTION_INC_EVENT_PHASE',
  'SMART_ACTION_EVADE',
  'SMART_ACTION_FLEE_FOR_ASSIST',
  'SMART_ACTION_CALL_GROUPEVENTHAPPENS',
  'SMART_ACTION_COMBAT_STOP',
  'SMART_ACTION_REMOVEAURASFROMSPELL',
  'SMART_ACTION_FOLLOW',
  'SMART_ACTION_RANDOM_PHASE',
  'SMART_ACTION_RANDOM_PHASE_RANGE',
  'SMART_ACTION_RESET_GOBJECT',
  'SMART_ACTION_CALL_KILLEDMONSTER',
  'SMART_ACTION_SET_INST_DATA',
  'SMART_ACTION_SET_INST_DATA64',
  'SMART_ACTION_UPDATE_TEMPLATE',
  'SMART_ACTION_DIE',
  'SMART_ACTION_SET_IN_COMBAT_WITH_ZONE',
  'SMART_ACTION_CALL_FOR_HELP',
  'SMART_ACTION_SET_SHEATH',
  'SMART_ACTION_FORCE_DESPAWN',
  'SMART_ACTION_SET_INVINCIBILITY_HP_LEVEL',
  'SMART_ACTION_MOUNT_TO_ENTRY_OR_MODEL',
  'SMART_ACTION_SET_INGAME_PHASE_ID',
  'SMART_ACTION_SET_DATA',
  'SMART_ACTION_MOVE_FORWARD',
  'SMART_ACTION_SET_VISIBILITY',
  'SMART_ACTION_SET_ACTIVE',
  'SMART_ACTION_ATTACK_START',
  'SMART_ACTION_SUMMON_GO',
  'SMART_ACTION_KILL_UNIT',
  'SMART_ACTION_ACTIVATE_TAXI',
  'SMART_ACTION_WP_START',
  'SMART_ACTION_WP_PAUSE',
  'SMART_ACTION_WP_STOP',
  'SMART_ACTION_ADD_ITEM',
  'SMART_ACTION_REMOVE_ITEM',
  'SMART_ACTION_INSTALL_AI_TEMPLATE',
  'SMART_ACTION_SET_RUN',
  'SMART_ACTION_SET_FLY',
  'SMART_ACTION_SET_SWIM',
  'SMART_ACTION_TELEPORT',
  'SMART_ACTION_SET_COUNTER',
  'SMART_ACTION_STORE_TARGET_LIST',
  'SMART_ACTION_WP_RESUME',
  'SMART_ACTION_SET_ORIENTATION',
  'SMART_ACTION_CREATE_TIMED_EVENT',
  'SMART_ACTION_PLAYMOVIE',
  'SMART_ACTION_MOVE_TO_POS',
  'SMART_ACTION_RESPAWN_TARGET',
  'SMART_ACTION_EQUIP',
  'SMART_ACTION_CLOSE_GOSSIP',
  'SMART_ACTION_TRIGGER_TIMED_EVENT',
  'SMART_ACTION_REMOVE_TIMED_EVENT',
  'SMART_ACTION_ADD_AURA',
  'SMART_ACTION_OVERRIDE_SCRIPT_BASE_OBJECT',
  'SMART_ACTION_RESET_SCRIPT_BASE_OBJECT',
  'SMART_ACTION_CALL_SCRIPT_RESET',
  'SMART_ACTION_SET_RANGED_MOVEMENT',
  'SMART_ACTION_CALL_TIMED_ACTIONLIST',
  'SMART_ACTION_SET_NPC_FLAG',
  'SMART_ACTION_ADD_NPC_FLAG',
  'SMART_ACTION_REMOVE_NPC_FLAG',
  'SMART_ACTION_SIMPLE_TALK',
  'SMART_ACTION_INVOKER_CAST',
  'SMART_ACTION_CROSS_CAST',
  'SMART_ACTION_CALL_RANDOM_TIMED_ACTIONLIST',
  'SMART_ACTION_CALL_RANDOM_RANGE_TIMED_ACTIONLIST',
  'SMART_ACTION_RANDOM_MOVE',
  'SMART_ACTION_SET_UNIT_FIELD_BYTES_1',
  'SMART_ACTION_REMOVE_UNIT_FIELD_BYTES_1',
  'SMART_ACTION_INTERRUPT_SPELL',
  'SMART_ACTION_SEND_GO_CUSTOM_ANIM',
  'SMART_ACTION_SET_DYNAMIC_FLAG',
  'SMART_ACTION_ADD_DYNAMIC_FLAG',
  'SMART_ACTION_REMOVE_DYNAMIC_FLAG',
  'SMART_ACTION_JUMP_TO_POS',
  'SMART_ACTION_SEND_GOSSIP_MENU',
  'SMART_ACTION_GO_SET_LOOT_STATE',
  'SMART_ACTION_SEND_TARGET_TO_TARGET',
  'SMART_ACTION_SET_HOME_POS',
  'SMART_ACTION_SET_HEALTH_REGEN',
  'SMART_ACTION_SET_ROOT',
  'SMART_ACTION_SET_GO_FLAG',
  'SMART_ACTION_ADD_GO_FLAG',
  'SMART_ACTION_REMOVE_GO_FLAG',
  'SMART_ACTION_SUMMON_CREATURE_GROUP',
  'SMART_ACTION_SET_POWER',
  'SMART_ACTION_ADD_POWER',
  'SMART_ACTION_REMOVE_POWER',
  'SMART_ACTION_GAME_EVENT_STOP',
  'SMART_ACTION_GAME_EVENT_START',
  'SMART_ACTION_START_CLOSEST_WAYPOINT',
  'SMART_ACTION_RISE_UP',
  'SMART_ACTION_RANDOM_SOUND',
  'SMART_ACTION_SET_CORPSE_DELAY',

  'SMART_EVENT_FLAG_NOT_REPEATABLE',
  'SMART_EVENT_FLAG_DIFFICULTY_0',
  'SMART_EVENT_FLAG_DIFFICULTY_1',
  'SMART_EVENT_FLAG_DIFFICULTY_2',
  'SMART_EVENT_FLAG_DIFFICULTY_3',
  'SMART_EVENT_FLAG_RESERVED_5',
  'SMART_EVENT_FLAG_RESERVED_6',
  'SMART_EVENT_FLAG_DEBUG_ONLY',
  'SMART_EVENT_FLAG_DONT_RESET',
  'SMART_EVENT_FLAG_WHILE_CHARMED'
)

# Regular expression rules for simple tokens
t_CREATURE    = r'CREATURE'
t_SCRIPT   = r'SCRIPT'
t_ENTRY = r'ENTRY'
t_GUID = r'GUID'
t_DO = r'DO'
t_AT = r'AT'

t_EQUAL = r'='
t_COLON =  r':'

t_ID = r'eventId'
t_LINK = r'eventlink'
t_EVENT_PHASE_MASK = r'eventPhaseMask'
t_EVENT_FLAGS = r'eventFlags'
t_EVENT_CHANCE = r'eventChance'

# we could write event parameters like this
#t_SPELL_ID = r'spellId'
#t_CAST_FLAGS = r'castFlags'
#t_CREATURE_ENTRY = r'creatureEntry'
#t_MAX_DIST = r'maxDist'

# but for simplicity now we will just use param1, param2, etc.
t_PARAM_1 = r'param1'
t_PARAM_2 = r'param2'
t_PARAM_3 = r'param3'
t_PARAM_4 = r'param4'

t_SMART_EVENT_FLAG_NOT_REPEATABLE = r'SMART_EVENT_FLAG_NOT_REPEATABLE'
t_SMART_EVENT_FLAG_DIFFICULTY_0 = r'SMART_EVENT_FLAG_DIFFICULTY_0'
t_SMART_EVENT_FLAG_DIFFICULTY_1 = r'SMART_EVENT_FLAG_DIFFICULTY_1'
t_SMART_EVENT_FLAG_DIFFICULTY_2 = r'SMART_EVENT_FLAG_DIFFICULTY_2'
t_SMART_EVENT_FLAG_DIFFICULTY_3 = r'SMART_EVENT_FLAG_DIFFICULTY_3'
t_SMART_EVENT_FLAG_DEBUG_ONLY = r'SMART_EVENT_FLAG_DEBUG_ONLY'
t_SMART_EVENT_FLAG_DONT_RESET = r'SMART_EVENT_FLAG_DONT_RESET'
t_SMART_EVENT_FLAG_WHILE_CHARMED = r'SMART_EVENT_FLAG_WHILE_CHARMED'

# SMART_EVENTS taken from TC source
t_SMART_EVENT_UPDATE_IC=r'SMART_EVENT_UPDATE_IC'
t_SMART_EVENT_UPDATE_OOC=r'SMART_EVENT_UPDATE_OOC'
t_SMART_EVENT_HEALT_PCT=r'SMART_EVENT_HEALT_PCT'
t_SMART_EVENT_MANA_PCT=r'SMART_EVENT_MANA_PCT'
t_SMART_EVENT_AGGRO=r'SMART_EVENT_AGGRO'
t_SMART_EVENT_KILL=r'SMART_EVENT_KILL'
t_SMART_EVENT_DEATH=r'SMART_EVENT_DEATH'
t_SMART_EVENT_EVADE=r'SMART_EVENT_EVADE'
t_SMART_EVENT_SPELLHIT=r'SMART_EVENT_SPELLHIT'
t_SMART_EVENT_RANGE=r'SMART_EVENT_RANGE'
t_SMART_EVENT_OOC_LOS=r'SMART_EVENT_OOC_LOS'
t_SMART_EVENT_RESPAWN=r'SMART_EVENT_RESPAWN'
t_SMART_EVENT_TARGET_HEALTH_PCT=r'SMART_EVENT_TARGET_HEALTH_PCT'
t_SMART_EVENT_VICTIM_CASTING=r'SMART_EVENT_VICTIM_CASTING'
t_SMART_EVENT_FRIENDLY_HEALTH=r'SMART_EVENT_FRIENDLY_HEALTH'
t_SMART_EVENT_FRIENDLY_IS_CC=r'SMART_EVENT_FRIENDLY_IS_CC'
t_SMART_EVENT_FRIENDLY_MISSING_BUFF=r'SMART_EVENT_FRIENDLY_MISSING_BUFF'
t_SMART_EVENT_SUMMONED_UNIT=r'SMART_EVENT_SUMMONED_UNIT'
t_SMART_EVENT_TARGET_MANA_PCT=r'SMART_EVENT_TARGET_MANA_PCT'
t_SMART_EVENT_ACCEPTED_QUEST=r'SMART_EVENT_ACCEPTED_QUEST'
t_SMART_EVENT_REWARD_QUEST=r'SMART_EVENT_REWARD_QUEST'
t_SMART_EVENT_REACHED_HOME=r'SMART_EVENT_REACHED_HOME'
t_SMART_EVENT_RECEIVE_EMOTE=r'SMART_EVENT_RECEIVE_EMOTE'
t_SMART_EVENT_HAS_AURA=r'SMART_EVENT_HAS_AURA'
t_SMART_EVENT_TARGET_BUFFED=r'SMART_EVENT_TARGET_BUFFED'
t_SMART_EVENT_RESET=r'SMART_EVENT_RESET'
t_SMART_EVENT_IC_LOS=r'SMART_EVENT_IC_LOS'
t_SMART_EVENT_PASSENGER_BOARDED=r'SMART_EVENT_PASSENGER_BOARDED'
t_SMART_EVENT_PASSENGER_REMOVED=r'SMART_EVENT_PASSENGER_REMOVED'
t_SMART_EVENT_CHARMED=r'SMART_EVENT_CHARMED'
t_SMART_EVENT_CHARMED_TARGET=r'SMART_EVENT_CHARMED_TARGET'
t_SMART_EVENT_SPELLHIT_TARGET=r'SMART_EVENT_SPELLHIT_TARGET'
t_SMART_EVENT_DAMAGED=r'SMART_EVENT_DAMAGED'
t_SMART_EVENT_DAMAGED_TARGET=r'SMART_EVENT_DAMAGED_TARGET'
t_SMART_EVENT_MOVEMENTINFORM=r'SMART_EVENT_MOVEMENTINFORM'
t_SMART_EVENT_SUMMON_DESPAWNED=r'SMART_EVENT_SUMMON_DESPAWNED'
t_SMART_EVENT_CORPSE_REMOVED=r'SMART_EVENT_CORPSE_REMOVED'
t_SMART_EVENT_AI_INIT=r'SMART_EVENT_AI_INIT'
t_SMART_EVENT_DATA_SET=r'SMART_EVENT_DATA_SET'
t_SMART_EVENT_WAYPOINT_START=r'SMART_EVENT_WAYPOINT_START'
t_SMART_EVENT_WAYPOINT_REACHED=r'SMART_EVENT_WAYPOINT_REACHED'
t_SMART_EVENT_TRANSPORT_ADDPLAYER=r'SMART_EVENT_TRANSPORT_ADDPLAYER'
t_SMART_EVENT_TRANSPORT_ADDCREATURE=r'SMART_EVENT_TRANSPORT_ADDCREATURE'
t_SMART_EVENT_TRANSPORT_REMOVE_PLAYER=r'SMART_EVENT_TRANSPORT_REMOVE_PLAYER'
t_SMART_EVENT_TRANSPORT_RELOCATE=r'SMART_EVENT_TRANSPORT_RELOCATE'
t_SMART_EVENT_INSTANCE_PLAYER_ENTER=r'SMART_EVENT_INSTANCE_PLAYER_ENTER'
t_SMART_EVENT_AREATRIGGER_ONTRIGGER=r'SMART_EVENT_AREATRIGGER_ONTRIGGER'
t_SMART_EVENT_QUEST_ACCEPTED=r'SMART_EVENT_QUEST_ACCEPTED'
t_SMART_EVENT_QUEST_OBJ_COPLETETION=r'SMART_EVENT_QUEST_OBJ_COPLETETION'
t_SMART_EVENT_QUEST_COMPLETION=r'SMART_EVENT_QUEST_COMPLETION'
t_SMART_EVENT_QUEST_REWARDED=r'SMART_EVENT_QUEST_REWARDED'
t_SMART_EVENT_QUEST_FAIL=r'SMART_EVENT_QUEST_FAIL'
t_SMART_EVENT_TEXT_OVER=r'SMART_EVENT_TEXT_OVER'
t_SMART_EVENT_RECEIVE_HEAL=r'SMART_EVENT_RECEIVE_HEAL'
t_SMART_EVENT_JUST_SUMMONED=r'SMART_EVENT_JUST_SUMMONED'
t_SMART_EVENT_WAYPOINT_PAUSED=r'SMART_EVENT_WAYPOINT_PAUSED'
t_SMART_EVENT_WAYPOINT_RESUMED=r'SMART_EVENT_WAYPOINT_RESUMED'
t_SMART_EVENT_WAYPOINT_STOPPED=r'SMART_EVENT_WAYPOINT_STOPPED'
t_SMART_EVENT_WAYPOINT_ENDED=r'SMART_EVENT_WAYPOINT_ENDED'
t_SMART_EVENT_TIMED_EVENT_TRIGGERED=r'SMART_EVENT_TIMED_EVENT_TRIGGERED'
t_SMART_EVENT_UPDATE=r'SMART_EVENT_UPDATE'
t_SMART_EVENT_LINK=r'SMART_EVENT_LINK'
t_SMART_EVENT_GOSSIP_SELECT=r'SMART_EVENT_GOSSIP_SELECT'
t_SMART_EVENT_JUST_CREATED=r'SMART_EVENT_JUST_CREATED'
t_SMART_EVENT_GOSSIP_HELLO=r'SMART_EVENT_GOSSIP_HELLO'
t_SMART_EVENT_FOLLOW_COMPLETED=r'SMART_EVENT_FOLLOW_COMPLETED'
t_SMART_EVENT_DUMMY_EFFECT=r'SMART_EVENT_DUMMY_EFFECT'
t_SMART_EVENT_IS_BEHIND_TARGET=r'SMART_EVENT_IS_BEHIND_TARGET'
t_SMART_EVENT_GAME_EVENT_START=r'SMART_EVENT_GAME_EVENT_START'
t_SMART_EVENT_GAME_EVENT_END=r'SMART_EVENT_GAME_EVENT_END'
t_SMART_EVENT_GO_STATE_CHANGED=r'SMART_EVENT_GO_STATE_CHANGED'
t_SMART_EVENT_GO_EVENT_INFORM=r'SMART_EVENT_GO_EVENT_INFORM'
t_SMART_EVENT_ACTION_DONE=r'SMART_EVENT_ACTION_DONE'
t_SMART_EVENT_ON_SPELLCLICK=r'SMART_EVENT_ON_SPELLCLICK'
t_SMART_EVENT_FRIENDLY_HEALTH_PCT=r'SMART_EVENT_FRIENDLY_HEALTH_PCT'
t_SMART_EVENT_DISTANCE_CREATURE=r'SMART_EVENT_DISTANCE_CREATURE'
t_SMART_EVENT_DISTANCE_GAMEOBJECT=r'SMART_EVENT_DISTANCE_GAMEOBJECT'
t_SMART_EVENT_COUNTER_SET=r'SMART_EVENT_COUNTER_SET'

    
t_SMART_ACTION_TALK=r'SMART_ACTION_TALK'
t_SMART_ACTION_SET_FACTION=r'SMART_ACTION_SET_FACTION'
t_SMART_ACTION_MORPH_TO_ENTRY_OR_MODEL=r'SMART_ACTION_MORPH_TO_ENTRY_OR_MODEL'
t_SMART_ACTION_SOUND=r'SMART_ACTION_SOUND'
t_SMART_ACTION_PLAY_EMOTE=r'SMART_ACTION_PLAY_EMOTE'
t_SMART_ACTION_FAIL_QUEST=r'SMART_ACTION_FAIL_QUEST'
t_SMART_ACTION_ADD_QUEST=r'SMART_ACTION_ADD_QUEST'
t_SMART_ACTION_SET_REACT_STATE=r'SMART_ACTION_SET_REACT_STATE'
t_SMART_ACTION_ACTIVATE_GOBJECT=r'SMART_ACTION_ACTIVATE_GOBJECT'
t_SMART_ACTION_RANDOM_EMOTE=r'SMART_ACTION_RANDOM_EMOTE'
t_SMART_ACTION_CAST=r'SMART_ACTION_CAST'
t_SMART_ACTION_SUMMON_CREATURE=r'SMART_ACTION_SUMMON_CREATURE'
t_SMART_ACTION_THREAT_SINGLE_PCT=r'SMART_ACTION_THREAT_SINGLE_PCT'
t_SMART_ACTION_THREAT_ALL_PCT=r'SMART_ACTION_THREAT_ALL_PCT'
t_SMART_ACTION_CALL_AREAEXPLOREDOREVENTHAPPENS=r'SMART_ACTION_CALL_AREAEXPLOREDOREVENTHAPPENS'
t_SMART_ACTION_SET_INGAME_PHASE_GROUP=r'SMART_ACTION_SET_INGAME_PHASE_GROUP'
t_SMART_ACTION_SET_EMOTE_STATE=r'SMART_ACTION_SET_EMOTE_STATE'
t_SMART_ACTION_SET_UNIT_FLAG=r'SMART_ACTION_SET_UNIT_FLAG'
t_SMART_ACTION_REMOVE_UNIT_FLAG=r'SMART_ACTION_REMOVE_UNIT_FLAG'
t_SMART_ACTION_AUTO_ATTACK=r'SMART_ACTION_AUTO_ATTACK'
t_SMART_ACTION_ALLOW_COMBAT_MOVEMENT=r'SMART_ACTION_ALLOW_COMBAT_MOVEMENT'
t_SMART_ACTION_SET_EVENT_PHASE=r'SMART_ACTION_SET_EVENT_PHASE'
t_SMART_ACTION_INC_EVENT_PHASE=r'SMART_ACTION_INC_EVENT_PHASE'
t_SMART_ACTION_EVADE=r'SMART_ACTION_EVADE'
t_SMART_ACTION_FLEE_FOR_ASSIST=r'SMART_ACTION_FLEE_FOR_ASSIST'
t_SMART_ACTION_CALL_GROUPEVENTHAPPENS=r'SMART_ACTION_CALL_GROUPEVENTHAPPENS'
t_SMART_ACTION_COMBAT_STOP=r'SMART_ACTION_COMBAT_STOP'
t_SMART_ACTION_REMOVEAURASFROMSPELL=r'SMART_ACTION_REMOVEAURASFROMSPELL'
t_SMART_ACTION_FOLLOW=r'SMART_ACTION_FOLLOW'
t_SMART_ACTION_RANDOM_PHASE=r'SMART_ACTION_RANDOM_PHASE'
t_SMART_ACTION_RANDOM_PHASE_RANGE=r'SMART_ACTION_RANDOM_PHASE_RANGE'
t_SMART_ACTION_RESET_GOBJECT=r'SMART_ACTION_RESET_GOBJECT'
t_SMART_ACTION_CALL_KILLEDMONSTER=r'SMART_ACTION_CALL_KILLEDMONSTER'
t_SMART_ACTION_SET_INST_DATA=r'SMART_ACTION_SET_INST_DATA'
t_SMART_ACTION_SET_INST_DATA64=r'SMART_ACTION_SET_INST_DATA64'
t_SMART_ACTION_UPDATE_TEMPLATE=r'SMART_ACTION_UPDATE_TEMPLATE'
t_SMART_ACTION_DIE=r'SMART_ACTION_DIE'
t_SMART_ACTION_SET_IN_COMBAT_WITH_ZONE=r'SMART_ACTION_SET_IN_COMBAT_WITH_ZONE'
t_SMART_ACTION_CALL_FOR_HELP=r'SMART_ACTION_CALL_FOR_HELP'
t_SMART_ACTION_SET_SHEATH=r'SMART_ACTION_SET_SHEATH'
t_SMART_ACTION_FORCE_DESPAWN=r'SMART_ACTION_FORCE_DESPAWN'
t_SMART_ACTION_SET_INVINCIBILITY_HP_LEVEL=r'SMART_ACTION_SET_INVINCIBILITY_HP_LEVEL'
t_SMART_ACTION_MOUNT_TO_ENTRY_OR_MODEL=r'SMART_ACTION_MOUNT_TO_ENTRY_OR_MODEL'
t_SMART_ACTION_SET_INGAME_PHASE_ID=r'SMART_ACTION_SET_INGAME_PHASE_ID'
t_SMART_ACTION_SET_DATA=r'SMART_ACTION_SET_DATA'
t_SMART_ACTION_MOVE_FORWARD=r'SMART_ACTION_MOVE_FORWARD'
t_SMART_ACTION_SET_VISIBILITY=r'SMART_ACTION_SET_VISIBILITY'
t_SMART_ACTION_SET_ACTIVE=r'SMART_ACTION_SET_ACTIVE'
t_SMART_ACTION_ATTACK_START=r'SMART_ACTION_ATTACK_START'
t_SMART_ACTION_SUMMON_GO=r'SMART_ACTION_SUMMON_GO'
t_SMART_ACTION_KILL_UNIT=r'SMART_ACTION_KILL_UNIT'
t_SMART_ACTION_ACTIVATE_TAXI=r'SMART_ACTION_ACTIVATE_TAXI'
t_SMART_ACTION_WP_START=r'SMART_ACTION_WP_START'
t_SMART_ACTION_WP_PAUSE=r'SMART_ACTION_WP_PAUSE'
t_SMART_ACTION_WP_STOP=r'SMART_ACTION_WP_STOP'
t_SMART_ACTION_ADD_ITEM=r'SMART_ACTION_ADD_ITEM'
t_SMART_ACTION_REMOVE_ITEM=r'SMART_ACTION_REMOVE_ITEM'
t_SMART_ACTION_INSTALL_AI_TEMPLATE=r'SMART_ACTION_INSTALL_AI_TEMPLATE'
t_SMART_ACTION_SET_RUN=r'SMART_ACTION_SET_RUN'
t_SMART_ACTION_SET_FLY=r'SMART_ACTION_SET_FLY'
t_SMART_ACTION_SET_SWIM=r'SMART_ACTION_SET_SWIM'
t_SMART_ACTION_TELEPORT=r'SMART_ACTION_TELEPORT'
t_SMART_ACTION_SET_COUNTER=r'SMART_ACTION_SET_COUNTER'
t_SMART_ACTION_STORE_TARGET_LIST=r'SMART_ACTION_STORE_TARGET_LIST'
t_SMART_ACTION_WP_RESUME=r'SMART_ACTION_WP_RESUME'
t_SMART_ACTION_SET_ORIENTATION=r'SMART_ACTION_SET_ORIENTATION'
t_SMART_ACTION_CREATE_TIMED_EVENT=r'SMART_ACTION_CREATE_TIMED_EVENT'
t_SMART_ACTION_PLAYMOVIE=r'SMART_ACTION_PLAYMOVIE'
t_SMART_ACTION_MOVE_TO_POS=r'SMART_ACTION_MOVE_TO_POS'
t_SMART_ACTION_RESPAWN_TARGET=r'SMART_ACTION_RESPAWN_TARGET'
t_SMART_ACTION_EQUIP=r'SMART_ACTION_EQUIP'
t_SMART_ACTION_CLOSE_GOSSIP=r'SMART_ACTION_CLOSE_GOSSIP'
t_SMART_ACTION_TRIGGER_TIMED_EVENT=r'SMART_ACTION_TRIGGER_TIMED_EVENT'
t_SMART_ACTION_REMOVE_TIMED_EVENT=r'SMART_ACTION_REMOVE_TIMED_EVENT'
t_SMART_ACTION_ADD_AURA=r'SMART_ACTION_ADD_AURA'
t_SMART_ACTION_OVERRIDE_SCRIPT_BASE_OBJECT=r'SMART_ACTION_OVERRIDE_SCRIPT_BASE_OBJECT'
t_SMART_ACTION_RESET_SCRIPT_BASE_OBJECT=r'SMART_ACTION_RESET_SCRIPT_BASE_OBJECT'
t_SMART_ACTION_CALL_SCRIPT_RESET=r'SMART_ACTION_CALL_SCRIPT_RESET'
t_SMART_ACTION_SET_RANGED_MOVEMENT=r'SMART_ACTION_SET_RANGED_MOVEMENT'
t_SMART_ACTION_CALL_TIMED_ACTIONLIST=r'SMART_ACTION_CALL_TIMED_ACTIONLIST'
t_SMART_ACTION_SET_NPC_FLAG=r'SMART_ACTION_SET_NPC_FLAG'
t_SMART_ACTION_ADD_NPC_FLAG=r'SMART_ACTION_ADD_NPC_FLAG'
t_SMART_ACTION_REMOVE_NPC_FLAG=r'SMART_ACTION_REMOVE_NPC_FLAG'
t_SMART_ACTION_SIMPLE_TALK=r'SMART_ACTION_SIMPLE_TALK'
t_SMART_ACTION_INVOKER_CAST=r'SMART_ACTION_INVOKER_CAST'
t_SMART_ACTION_CROSS_CAST=r'SMART_ACTION_CROSS_CAST'
t_SMART_ACTION_CALL_RANDOM_TIMED_ACTIONLIST=r'SMART_ACTION_CALL_RANDOM_TIMED_ACTIONLIST'
t_SMART_ACTION_CALL_RANDOM_RANGE_TIMED_ACTIONLIST=r'SMART_ACTION_CALL_RANDOM_RANGE_TIMED_ACTIONLIST'
t_SMART_ACTION_RANDOM_MOVE=r'SMART_ACTION_RANDOM_MOVE'
t_SMART_ACTION_SET_UNIT_FIELD_BYTES_1=r'SMART_ACTION_SET_UNIT_FIELD_BYTES_1'
t_SMART_ACTION_REMOVE_UNIT_FIELD_BYTES_1=r'SMART_ACTION_REMOVE_UNIT_FIELD_BYTES_1'
t_SMART_ACTION_INTERRUPT_SPELL=r'SMART_ACTION_INTERRUPT_SPELL'
t_SMART_ACTION_SEND_GO_CUSTOM_ANIM=r'SMART_ACTION_SEND_GO_CUSTOM_ANIM'
t_SMART_ACTION_SET_DYNAMIC_FLAG=r'SMART_ACTION_SET_DYNAMIC_FLAG'
t_SMART_ACTION_ADD_DYNAMIC_FLAG=r'SMART_ACTION_ADD_DYNAMIC_FLAG'
t_SMART_ACTION_REMOVE_DYNAMIC_FLAG=r'SMART_ACTION_REMOVE_DYNAMIC_FLAG'
t_SMART_ACTION_JUMP_TO_POS=r'SMART_ACTION_JUMP_TO_POS'
t_SMART_ACTION_SEND_GOSSIP_MENU=r'SMART_ACTION_SEND_GOSSIP_MENU'
t_SMART_ACTION_GO_SET_LOOT_STATE=r'SMART_ACTION_GO_SET_LOOT_STATE'
t_SMART_ACTION_SEND_TARGET_TO_TARGET=r'SMART_ACTION_SEND_TARGET_TO_TARGET'
t_SMART_ACTION_SET_HOME_POS=r'SMART_ACTION_SET_HOME_POS'
t_SMART_ACTION_SET_HEALTH_REGEN=r'SMART_ACTION_SET_HEALTH_REGEN'
t_SMART_ACTION_SET_ROOT=r'SMART_ACTION_SET_ROOT'
t_SMART_ACTION_SET_GO_FLAG=r'SMART_ACTION_SET_GO_FLAG'
t_SMART_ACTION_ADD_GO_FLAG=r'SMART_ACTION_ADD_GO_FLAG'
t_SMART_ACTION_REMOVE_GO_FLAG=r'SMART_ACTION_REMOVE_GO_FLAG'
t_SMART_ACTION_SUMMON_CREATURE_GROUP=r'SMART_ACTION_SUMMON_CREATURE_GROUP'
t_SMART_ACTION_SET_POWER=r'SMART_ACTION_SET_POWER'
t_SMART_ACTION_ADD_POWER=r'SMART_ACTION_ADD_POWER'
t_SMART_ACTION_REMOVE_POWER=r'SMART_ACTION_REMOVE_POWER'
t_SMART_ACTION_GAME_EVENT_STOP=r'SMART_ACTION_GAME_EVENT_STOP'
t_SMART_ACTION_GAME_EVENT_START=r'SMART_ACTION_GAME_EVENT_START'
t_SMART_ACTION_START_CLOSEST_WAYPOINT=r'SMART_ACTION_START_CLOSEST_WAYPOINT'
t_SMART_ACTION_RISE_UP=r'SMART_ACTION_RISE_UP'
t_SMART_ACTION_RANDOM_SOUND=r'SMART_ACTION_RANDOM_SOUND'
t_SMART_ACTION_SET_CORPSE_DELAY=r'SMART_ACTION_SET_CORPSE_DELAY'

# A regular expression rule with some action code
def t_NUMBER(t):
    r'\d+\.\d+|\d+'
    #numbers with comma or numbers with no comma
    if token.value.isdigit():
        number_value = int(token.value)
        number_type = "int"
    else:
        number_value = float(token.value)
        number_type = "float"
    token.value = {"value": number_value, "type": number_type}
    return token


# Define a rule so we can track line numbers
def t_newline(t):
    r'\n+'
    t.lexer.lineno += len(t.value)

# A string containing ignored characters (spaces and tabs)
t_ignore  = ' \t'

# Error handling rule
def t_error(t):
    print("Illegal character '%s'" % t.value[0])
    t.lexer.skip(1)

# Build the lexer
lexer = lex.lex()

# this function returns tokens from data input as a list
def apply(data):
  # Give the lexer some input
  lexer.input(data)
  return list(lexer)